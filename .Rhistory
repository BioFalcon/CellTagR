theme(legend.position="none",
axis.text.x = element_text(angle = 45, hjust = 1),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
ggplot(collpasing, aes(x = collpasing$value)) +
geom_histogram(binwidth = 5, aes(fill = category)) +
scale_fill_manual(values = rev(viridis(20, option = "A")[c(6,15)])) +
theme(legend.position="none",
axis.text.x = element_text(angle = 45, hjust = 1),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
ggplot(collpasing, aes(x = collpasing$value)) +
geom_histogram(binwidth = 5, aes(fill = category)) +
scale_fill_manual(values = rev(viridis(20, option = "A")[c(6,10)])) +
theme(legend.position="none",
axis.text.x = element_text(angle = 45, hjust = 1),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
ggplot(collpasing, aes(x = collpasing$value)) +
geom_histogram(binwidth = 5, aes(fill = category)) +
scale_fill_manual(values = rev(viridis(20, option = "A")[c(6,15)])) +
theme(legend.position="none",
axis.text.x = element_text(angle = 45, hjust = 1),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
ggplot(collpasing, aes(x = collpasing$value)) +
geom_histogram(binwidth = 5, aes(fill = category)) +
scale_fill_manual(values = rev(viridis(20, option = "A")[c(10,15)])) +
theme(legend.position="none",
axis.text.x = element_text(angle = 45, hjust = 1),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
ggplot(collpasing, aes(x = collpasing$value)) +
geom_histogram(binwidth = 5, aes(fill = category)) +
scale_fill_manual(values = rev(viridis(20, option = "A")[c(9,15)])) +
theme(legend.position="none",
axis.text.x = element_text(angle = 45, hjust = 1),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
ggplot(collpasing, aes(x = collpasing$value)) +
geom_histogram(binwidth = 5, aes(fill = category)) +
scale_fill_manual(values = rev(viridis(20, option = "A")[c(8,15)])) +
theme(legend.position="none",
axis.text.x = element_text(angle = 45, hjust = 1),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
ggplot(collpasing, aes(x = collpasing$value)) +
geom_histogram(binwidth = 5, aes(fill = category)) +
scale_fill_manual(values = rev(viridis(20, option = "A")[c(8,16)])) +
theme(legend.position="none",
axis.text.x = element_text(angle = 45, hjust = 1),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
collpasing <- before.collapsing[,c(1:3)]
collpasing$category <- "Before"
after.collapsing$category <- "After"
collpasing <- rbind(after.collapsing, collpasing)
ggplot(collpasing, aes(x = collpasing$value)) +
geom_histogram(binwidth = 5, aes(fill = category)) +
scale_fill_manual(values = rev(viridis(20, option = "A")[c(8,16)])) +
theme(legend.position="none",
axis.text.x = element_text(angle = 45, hjust = 1),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
collpasing <- collpasing[order(collpasing$category), ]
ggplot(collpasing, aes(x = collpasing$value)) +
geom_histogram(binwidth = 5, aes(fill = category)) +
scale_fill_manual(values = rev(viridis(20, option = "A")[c(8,16)])) +
theme(legend.position="none",
axis.text.x = element_text(angle = 45, hjust = 1),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
ggplot(collpasing, aes(x = collpasing$value)) +
geom_histogram(binwidth = 5, aes(fill = category)) +
scale_fill_manual(values = rev(viridis(20, option = "A")[c(8,16)])) +
theme(legend.position="right",
axis.text.x = element_text(angle = 45, hjust = 1),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
collpasing$category <- as.factor(collpasing$category)
ggplot(collpasing, aes(x = collpasing$value)) +
geom_histogram(binwidth = 5, aes(fill = category)) +
scale_fill_manual(values = rev(viridis(20, option = "A")[c(8,16)])) +
theme(legend.position="right",
axis.text.x = element_text(angle = 45, hjust = 1),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
ggplot(collpasing, aes(x = collpasing$value)) +
geom_histogram(binwidth = 5, position = "stack", aes(fill = category)) +
scale_fill_manual(values = rev(viridis(20, option = "A")[c(8,16)])) +
theme(legend.position="right",
axis.text.x = element_text(angle = 45, hjust = 1),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
?geom_bar
ggplot(collpasing, aes(x = collpasing$value)) +
geom_histogram(binwidth = 5, position = position_stack(reverse = T), aes(fill = category)) +
scale_fill_manual(values = rev(viridis(20, option = "A")[c(8,16)])) +
theme(legend.position="right",
axis.text.x = element_text(angle = 45, hjust = 1),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
before.cc <- as.data.frame(table(before.collapsing$Cell.Barcode))
after.cc <- as.data.frame(table(after.collapsing$Cell.Barcode))
View(before.cc)
setdiff(before.cc$Var1, after.cc$Var1)
bam.test.obj <- readRDS("~/Desktop/Morris Lab/CellTagR/inst/extdata/Demo_V1.Rds")
# Generate the sparse count matrix
bam.test.obj <- CellTagMatrixCount(celltag.obj = bam.test.obj, barcodes.file = "~/Desktop/presentation/Demo/barcodes.tsv")
# Check the dimension of the raw count matrix
dim(bam.test.obj@raw.count)
# Generating the collapsing file
bam.test.obj <- CellTagDataForCollapsing(celltag.obj = bam.test.obj, output.file = "~/Desktop/collapsing.txt")
length(unique(bam.test.obj@pre.starcode[["v1"]]))
length(unique(bam.test.obj@pre.starcode[["v1"]]$X2))
# Recount and generate collapsed matrix
bam.test.obj <- CellTagDataPostCollapsing(celltag.obj = bam.test.obj, collapsed.rslt.file = "~/Desktop/test_starcode_out_2.txt")
inter.before.after <- intersect(before.cc$Var1, after.cc$Var1)
rownames(before.cc) <- before.cc$Var1
View(before.cc)
rownames(after.cc) <- after.cc$Var1
comb.freq.table <- data.frame(row.names = inter.before.after,
before = before.cc[inter.before.after, "Freq"],
after = after.cc[inter.before.after, "Freq"],
Cell.Barcode = inter.before.after,
stringsAsFactors = F)
View(comb.freq.table)
View(comb.freq.table)
# adding difference information before and after
comb.freq.table$diff <- comb.freq.table$before - comb.freq.table$after
View(comb.freq.table)
ggplot(comb.freq.table, aes(x = diff)) +
geom_histogram()
ggplot(collpasing, aes(x = collpasing$value)) +
geom_histogram(binwidth = 10, position = position_stack(reverse = T), aes(fill = category)) +
scale_fill_manual(values = rev(viridis(20, option = "A")[c(8,16)])) +
theme(legend.position="right",
axis.text.x = element_text(angle = 45, hjust = 1),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
ggplot(comb.freq.table, aes(x = diff)) +
geom_histogram(binwidth = 10)
ggplot(comb.freq.table, aes(x = diff)) +
geom_histogram(binwidth = 5)
ggplot(comb.freq.table, aes(x = diff)) +
geom_histogram(binwidth = 3)
collapsed.cells <- sum(comb.freq.table$diff > 0)
?round
collapsed.cells <- sum(comb.freq.table$diff > 0)
print("percentage of cells that underwent collpasing: ",
round(collapsed.cells * 100/nrow(comb.freq.table), digits = 3),
"%")
round(collapsed.cells * 100/nrow(comb.freq.table), digits = 3)
collapsed.cells.perc <- round(sum(comb.freq.table$diff > 0) * 100/nrow(comb.freq.table), digits = 3)
print("percentage of cells that underwent collpasing: ", collapsed.cells.perc, "%")
collapsed.cells.perc <- round(sum(comb.freq.table$diff > 0) * 100/nrow(comb.freq.table), digits = 3)
print("percentage of cells that underwent collpasing: ", collapsed.cells.perc, "\%")
print("percentage of cells that underwent collpasing: ", collapsed.cells.perc)
collapsed.cells.perc <- sum(comb.freq.table$diff > 0) * 100/nrow(comb.freq.table)
print("percentage of cells that underwent collpasing: ", collapsed.cells.perc)
collapsed.cells.perc <- round(sum(comb.freq.table$diff > 0) * 100/nrow(comb.freq.table), digits = 3)
print(paste0("percentage of cells that underwent collpasing: ", collapsed.cells.perc, "%"))
View(comb.freq.table)
i <- 1
before.curr <- before.ct[which(before.ct$Cell.Barcode == collapsed.cell.bc[i]), ]
# Before/After collapsing tags
before.ct <- before.collapsing[which(before.collapsing$Cell.Barcode %in% collapsed.cell.bc), ]
# Limit to collapsed cells only
collapsed.cell.bc <- comb.freq.table[which(comb.freq.table$diff > 0), "Cell.Barcode"]
# Before/After collapsing tags
before.ct <- before.collapsing[which(before.collapsing$Cell.Barcode %in% collapsed.cell.bc), ]
after.ct <- after.collapsing[which(after.collapsing$Cell.Barcode %in% collapsed.cell.bc), ]
View(after.ct)
before.curr <- before.ct[which(before.ct$Cell.Barcode == collapsed.cell.bc[i]), ]
after.curr <- after.ct[which(after.ct$Cell.Barcode == collapsed.cell.bc[i]), ]
# Loop to count for celltag collapsing frequency
celltag.df <- data.frame()
for (i in 1:length(collapsed.cell.bc)) {
before.curr <- before.ct[which(before.ct$Cell.Barcode == collapsed.cell.bc[i]), ]
after.curr <- after.ct[which(after.ct$Cell.Barcode == collapsed.cell.bc[i]), ]
tag.diff <- setdiff(before.curr$CellTag, after.curr$CellTag)
if (length(tag.diff) > 0) {
if (nrow(celltag.df) <= 0) {
celltag.df <- data.frame(row.names = tag.diff, count = rep(1, length(tag.diff)))
} else {
curr.intersection <- intersect(tag.diff, rownames(celltag.df))
curr.diff <- setdiff(tag.diff, rownames(celltag.df))
if (length(curr.intersection) > 0) {
celltag.df[curr.intersection, "count"] <- celltag.df[curr.intersection, "count"] + 1
}
curr.df <- data.frame(row.names = curr.diff, count = rep(1, length(curr.diff)))
celltag.df <- rbind(celltag.df, curr.df)
}
}
}
View(celltag.df)
View(celltag.df)
collapsing.rslt.file <- read.table("~/Desktop/test_starcode_out_2.txt", sep = "\t", header = F, stringsAsFactors = F)
View(collapsing.rslt.file)
?apply
centroids.celltag <- apply(collapsing.rslt.file, 1, function(x) substring(x, 1, 8))
View(collapsing.rslt.file)
centroids.celltag <- apply(collapsing.rslt.file, 1, function(x) substring(x[1], 1, 8))
collapsing.rslt.file <- read.table("~/Desktop/test_starcode_out_2.txt", sep = "\t", header = F, stringsAsFactors = F)
centroids.2.celltags <- list()
centroids.2.cellbc <- list()
for (i in 1:nrow(collapsing.rslt.file)) {
curr.row <- collapsing.rslt.file[i]
curr.centroid <- curr.row[1]
curr.centroid.ct <- substring(curr.centroid, 1, 8)
curr.cell.bc <- substring(curr.centroid, 9)
curr.collapsing <- strsplit(curr.row[3], ",")[[1]]
curr.merging.ct <- substring(curr.collapsing, 1, 8)
curr.merging.bc <- substring(curr.collapsing, 9)
centroids.2.celltags[[curr.centroid.ct]] <- curr.merging.ct
centroids.2.cellbc[[curr.cell.bc]] <- curr.merging.bc
}
curr.row <- collapsing.rslt.file[i]
curr.row <- collapsing.rslt.file[i,]
curr.centroid <- curr.row[1]
curr.centroid.ct <- substring(curr.centroid, 1, 8)
curr.cell.bc <- substring(curr.centroid, 9)
curr.collapsing <- strsplit(curr.row[3], ",")[[1]]
curr.collapsing <- strsplit(curr.row[,3], ",")[[1]]
curr.merging.ct <- substring(curr.collapsing, 1, 8)
curr.merging.bc <- substring(curr.collapsing, 9)
centroids.2.celltags[[curr.centroid.ct]] <- curr.merging.ct
centroids.2.cellbc[[curr.cell.bc]] <- curr.merging.bc
collapsing.rslt.file <- read.table("~/Desktop/test_starcode_out_2.txt", sep = "\t", header = F, stringsAsFactors = F)
centroids.2.celltags <- list()
centroids.2.cellbc <- list()
for (i in 1:nrow(collapsing.rslt.file)) {
curr.row <- collapsing.rslt.file[i,]
curr.centroid <- curr.row[,1]
curr.centroid.ct <- substring(curr.centroid, 1, 8)
curr.cell.bc <- substring(curr.centroid, 9)
curr.collapsing <- strsplit(curr.row[,3], ",")[[1]]
curr.merging.ct <- substring(curr.collapsing, 1, 8)
curr.merging.bc <- substring(curr.collapsing, 9)
centroids.2.celltags[[curr.centroid.ct]] <- curr.merging.ct
centroids.2.cellbc[[curr.cell.bc]] <- curr.merging.bc
}
collapsing.rslt.file <- read.table("~/Desktop/test_starcode_out_2.txt", sep = "\t", header = F, stringsAsFactors = F)
centroids.2.celltags <- list()
centroids.2.cellbc <- list()
for (i in 1:nrow(collapsing.rslt.file)) {
curr.row <- collapsing.rslt.file[i,]
curr.centroid <- curr.row[,1]
curr.centroid.ct <- substring(curr.centroid, 1, 8)
curr.cell.bc <- substring(curr.centroid, 9)
curr.collapsing <- strsplit(curr.row[,3], ",")[[1]]
curr.merging.ct <- substring(curr.collapsing, 1, 8)
curr.merging.bc <- substring(curr.collapsing, 9)
centroids.2.celltags[[curr.centroid]] <- list(curr.centroid.ct, curr.merging.ct)
centroids.2.cellbc[[curr.centroid]] <- list(curr.cell.bc, curr.merging.bc)
}
View(celltag.df)
hist(celltag.df$count)
hist(celltag.df$count, bins = 50)
?hist
hist(celltag.df$count, freq = 50)
hist(celltag.df$count, freq = 100)
hist(celltag.df$count, freq = 1000)
?hist
hist(celltag.df$count, breaks = 100)
density(celltag.df$count)
plot(density(celltag.df$count))
plot(density(celltag.df$count, bw = 10))
plot(density(celltag.df$count, bw = 5))
plot(density(celltag.df$count, bw = 2))
plot(density(celltag.df$count, bw = 1))
plot(density(celltag.df$count, bw = 0.5))
plot(density(celltag.df$count, bw = 0.1))
plot(density(celltag.df$count, bw = 0.2))
plot(density(celltag.df$count, bw = 0.3))
names(centroids.2.celltags)
celltag.df.cell.based <- list()
for (i in 1:nrow(collapsing.rslt.file)) {
curr.row <- collapsing.rslt.file[i,]
curr.centroid <- curr.row[,1]
curr.celltags <- centroids.2.celltags[[curr.centroid]]
curr.cellbc <- centroids.2.cellbc[[curr.centroid]]
curr.df <- data.frame(celltag.collapse = curr.celltags[[2]][2:length(curr.celltags[[2]])],
centroid = curr.celltags[[1]], stringsAsFactors = F)
if (curr.cellbc %in% names(celltag.df.cell.based)) {
celltag.df.cell.based[[curr.cellbc]] <- rbind(celltag.df.cell.based[[curr.cellbc]], curr.df)
} else {
celltag.df.cell.based[[curr.cellbc]] <- curr.df
}
}
curr.row <- collapsing.rslt.file[i,]
curr.centroid <- curr.row[,1]
curr.celltags <- centroids.2.celltags[[curr.centroid]]
curr.cellbc <- centroids.2.cellbc[[curr.centroid]]
curr.df <- data.frame(celltag.collapse = curr.celltags[[2]][2:length(curr.celltags[[2]])],
centroid = curr.celltags[[1]], stringsAsFactors = F)
View(curr.df)
celltag.df.cell.based[[curr.cellbc]] <- curr.df
celltag.df.cell.based <- list()
for (i in 1:nrow(collapsing.rslt.file)) {
curr.row <- collapsing.rslt.file[i,]
curr.centroid <- curr.row[,1]
curr.celltags <- centroids.2.celltags[[curr.centroid]]
curr.cellbc <- centroids.2.cellbc[[curr.centroid]]
curr.df <- data.frame(celltag.collapse = curr.celltags[[2]][2:length(curr.celltags[[2]])],
centroid = curr.celltags[[1]], match.bc = (unique(curr.cellbc[[2]]) == curr.cellbc[[1]]), stringsAsFactors = F)
if (curr.cellbc %in% names(celltag.df.cell.based)) {
celltag.df.cell.based[[curr.cellbc[[1]]]] <- rbind(celltag.df.cell.based[[curr.cellbc]], curr.df)
} else {
celltag.df.cell.based[[curr.cellbc[[1]]]] <- curr.df
}
}
curr.cellbc[[2]]
unique(curr.cellbc[[2]])
curr.cellbc[[1]]
matching.barcodes <- (unique(curr.cellbc[[2]]) == curr.cellbc[[1]])
celltag.df.cell.based <- list()
for (i in 1:nrow(collapsing.rslt.file)) {
curr.row <- collapsing.rslt.file[i,]
curr.centroid <- curr.row[,1]
curr.celltags <- centroids.2.celltags[[curr.centroid]]
curr.cellbc <- centroids.2.cellbc[[curr.centroid]]
matching.barcodes <- (unique(curr.cellbc[[2]]) == curr.cellbc[[1]])
curr.df <- data.frame(celltag.collapse = curr.celltags[[2]][2:length(curr.celltags[[2]])],
centroid = curr.celltags[[1]], match.bc = matching.barcodes, stringsAsFactors = F)
if (curr.cellbc %in% names(celltag.df.cell.based)) {
celltag.df.cell.based[[curr.cellbc[[1]]]] <- rbind(celltag.df.cell.based[[curr.cellbc]], curr.df)
} else {
celltag.df.cell.based[[curr.cellbc[[1]]]] <- curr.df
}
}
curr.cellbc[[1]]
celltag.df.cell.based[[curr.cellbc[[1]]]] <- curr.df
celltag.df.cell.based <- list()
for (i in 1:nrow(collapsing.rslt.file)) {
curr.row <- collapsing.rslt.file[i,]
curr.centroid <- curr.row[,1]
curr.celltags <- centroids.2.celltags[[curr.centroid]]
curr.cellbc <- centroids.2.cellbc[[curr.centroid]]
matching.barcodes <- (unique(curr.cellbc[[2]]) == curr.cellbc[[1]])
curr.df <- data.frame(celltag.collapse = curr.celltags[[2]][2:length(curr.celltags[[2]])],
centroid = curr.celltags[[1]], match.bc = matching.barcodes, stringsAsFactors = F)
if (curr.cellbc %in% names(celltag.df.cell.based)) {
celltag.df.cell.based[[curr.cellbc[[1]]]] <- rbind(celltag.df.cell.based[[curr.cellbc[[1]]]], curr.df)
} else {
celltag.df.cell.based[[curr.cellbc[[1]]]] <- curr.df
}
}
celltag.df.cell.based <- list()
for (i in 1:nrow(collapsing.rslt.file)) {
curr.row <- collapsing.rslt.file[i,]
curr.centroid <- curr.row[,1]
curr.celltags <- centroids.2.celltags[[curr.centroid]]
curr.cellbc <- centroids.2.cellbc[[curr.centroid]]
matching.barcodes <- (unique(curr.cellbc[[2]]) == curr.cellbc[[1]])
curr.df <- data.frame(celltag.collapse = curr.celltags[[2]][2:length(curr.celltags[[2]])],
centroid = curr.celltags[[1]],
match.bc = rep(matching.barcodes, length(curr.celltags[[2]] - 1)),
stringsAsFactors = F)
if (curr.cellbc %in% names(celltag.df.cell.based)) {
celltag.df.cell.based[[curr.cellbc[[1]]]] <- rbind(celltag.df.cell.based[[curr.cellbc[[1]]]], curr.df)
} else {
celltag.df.cell.based[[curr.cellbc[[1]]]] <- curr.df
}
}
celltag.df.cell.based <- list()
for (i in 1:nrow(collapsing.rslt.file)) {
curr.row <- collapsing.rslt.file[i,]
curr.centroid <- curr.row[,1]
curr.celltags <- centroids.2.celltags[[curr.centroid]]
curr.cellbc <- centroids.2.cellbc[[curr.centroid]]
matching.barcodes <- (unique(curr.cellbc[[2]]) == curr.cellbc[[1]])
curr.df <- data.frame(celltag.collapse = curr.celltags[[2]][2:length(curr.celltags[[2]])],
centroid = curr.celltags[[1]],
match.bc = rep(matching.barcodes, length(curr.celltags[[2]]) - 1),
stringsAsFactors = F)
if (curr.cellbc %in% names(celltag.df.cell.based)) {
celltag.df.cell.based[[curr.cellbc[[1]]]] <- rbind(celltag.df.cell.based[[curr.cellbc[[1]]]], curr.df)
} else {
celltag.df.cell.based[[curr.cellbc[[1]]]] <- curr.df
}
}
celltag.df.cell.based <- list()
for (i in 1:nrow(collapsing.rslt.file)) {
curr.row <- collapsing.rslt.file[i,]
curr.centroid <- curr.row[,1]
curr.celltags <- centroids.2.celltags[[curr.centroid]]
curr.cellbc <- centroids.2.cellbc[[curr.centroid]]
matching.barcodes <- (unique(curr.cellbc[[2]]) == curr.cellbc[[1]])
curr.df <- data.frame(celltag.collapse = curr.celltags[[2]][2:length(curr.celltags[[2]])],
centroid = rep(curr.celltags[[1]], length(curr.celltags[[2]]) - 1),
match.bc = rep(matching.barcodes, length(curr.celltags[[2]]) - 1),
stringsAsFactors = F)
if (curr.cellbc %in% names(celltag.df.cell.based)) {
celltag.df.cell.based[[curr.cellbc[[1]]]] <- rbind(celltag.df.cell.based[[curr.cellbc[[1]]]], curr.df)
} else {
celltag.df.cell.based[[curr.cellbc[[1]]]] <- curr.df
}
}
matching.barcodes <- (unique(curr.cellbc[[2]]) == curr.cellbc[[1]])
curr.df <- data.frame(celltag.collapse = curr.celltags[[2]][2:length(curr.celltags[[2]])],
centroid = rep(curr.celltags[[1]], length(curr.celltags[[2]]) - 1),
match.bc = rep(matching.barcodes, length(curr.celltags[[2]]) - 1),
stringsAsFactors = F)
celltag.df.cell.based <- list()
for (i in 1:nrow(collapsing.rslt.file)) {
curr.row <- collapsing.rslt.file[i,]
curr.centroid <- curr.row[,1]
curr.celltags <- centroids.2.celltags[[curr.centroid]]
curr.cellbc <- centroids.2.cellbc[[curr.centroid]]
matching.barcodes <- (unique(curr.cellbc[[2]]) == curr.cellbc[[1]])
if (length(curr.celltags[[2]]) >= 2) {
curr.df <- data.frame(celltag.collapse = curr.celltags[[2]][2:length(curr.celltags[[2]])],
centroid = rep(curr.celltags[[1]], length(curr.celltags[[2]]) - 1),
match.bc = rep(matching.barcodes, length(curr.celltags[[2]]) - 1),
stringsAsFactors = F)
if (curr.cellbc %in% names(celltag.df.cell.based)) {
celltag.df.cell.based[[curr.cellbc[[1]]]] <- rbind(celltag.df.cell.based[[curr.cellbc[[1]]]], curr.df)
} else {
celltag.df.cell.based[[curr.cellbc[[1]]]] <- curr.df
}
}
}
ggplot(comb.freq.table, aes(x = diff)) +
geom_histogram(binwidth = 3) +
theme(legend.position="none",
axis.text.x = element_text(angle = 45, hjust = 1),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
# quantiles of celltags corrected
quantile(comb.freq.table$diff)
before.cc <- as.data.frame(table(before.collapsing$Cell.Barcode))
after.cc <- as.data.frame(table(after.collapsing$Cell.Barcode))
inter.before.after <- intersect(before.cc$Var1, after.cc$Var1)
rownames(before.cc) <- before.cc$Var1
rownames(after.cc) <- after.cc$Var1
comb.freq.table <- data.frame(row.names = inter.before.after,
before = before.cc[inter.before.after, "Freq"],
after = after.cc[inter.before.after, "Freq"],
Cell.Barcode = inter.before.after,
stringsAsFactors = F)
# adding difference information before and after
comb.freq.table$diff <- comb.freq.table$before - comb.freq.table$after
# quantiles of celltags corrected
quantile(comb.freq.table$diff)
print("Average CellTag errors corrected: ", mean(comb.freq.table$diff))
before.cc <- as.data.frame(table(before.collapsing$Cell.Barcode))
after.cc <- as.data.frame(table(after.collapsing$Cell.Barcode))
inter.before.after <- intersect(before.cc$Var1, after.cc$Var1)
rownames(before.cc) <- before.cc$Var1
rownames(after.cc) <- after.cc$Var1
comb.freq.table <- data.frame(row.names = inter.before.after,
before = before.cc[inter.before.after, "Freq"],
after = after.cc[inter.before.after, "Freq"],
Cell.Barcode = inter.before.after,
stringsAsFactors = F)
# adding difference information before and after
comb.freq.table$diff <- comb.freq.table$before - comb.freq.table$after
# quantiles of celltags corrected
quantile(comb.freq.table$diff)
print(paste0("Average CellTag errors corrected: ", mean(comb.freq.table$diff)))
ggplot(collpasing, aes(x = collpasing$value)) +
geom_histogram(binwidth = 10, position = position_stack(reverse = T), aes(fill = category)) +
scale_fill_manual(values = rev(viridis(20, option = "A")[c(8,16)])) +
labs(x = "CellTag Numbers", y = "Count") +
theme(legend.position="right",
axis.text.x = element_text(angle = 45, hjust = 1),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
View(comb.freq.table)
ggplot(comb.freq.table, aes(x = diff)) +
geom_histogram(binwidth = 2) +
theme(legend.position="none",
axis.text.x = element_text(angle = 45, hjust = 1),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
